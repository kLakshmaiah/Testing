name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x' # Specify .NET 8

    - name: Restore dependencies
      run: dotnet restore Testing.sln

    - name: Build
      run: dotnet build Testing.sln --no-restore

    - name: Run tests with coverage
      run: dotnet test Testing.sln --no-build --collect:"XPlat Code Coverage" /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./TestResults/

    - name: List all files and directories
      run: find . -type d -or -type f

    - name: Find coverage file
      id: coverage-file
      run: |
        coverage_file=$(find . -name coverage.cobertura.xml)
        echo "coverage_file=$coverage_file" >> $GITHUB_ENV
        echo "coverage_file=$coverage_file" >> $GITHUB_OUTPUT
        echo "Coverage file path: $coverage_file"

    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Convert Cobertura to LCOV
      run: reportgenerator -reports:${{ env.coverage_file }} -targetdir:./TestResults/ -reporttypes:lcov
      env:
        coverage_file: ${{ steps.coverage-file.outputs.coverage_file }}

    - name: Find LCOV file
      id: lcov-file
      run: |
        lcov_file=$(find ./TestResults/ -name coverage.lcov)
        echo "lcov_file=$lcov_file" >> $GITHUB_ENV
        echo "lcov_file=$lcov_file" >> $GITHUB_OUTPUT
        echo "LCOV file path: $lcov_file"

    - name: Debug LCOV file existence
      run: |
        echo "Checking if LCOV file exists at ${{ env.lcov_file }}"
        if [ -f "${{ env.lcov_file }}" ]; then
          echo "LCOV file exists at ${{ env.lcov_file }}"
        else
          echo "LCOV file not found a
