name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x' # Specify .NET 8

    - name: Restore dependencies
      run: dotnet restore Testing.sln

    - name: Build
      run: dotnet build Testing.sln --no-restore

    - name: Run tests with coverage
      run: dotnet test Testing.sln --no-build --collect:"XPlat Code Coverage" /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./TestResults/

    - name: Verify test results directory
      run: find . -name TestResults -exec ls -la {} \;

    - name: Find coverage file
      id: coverage-file
      run: echo "coverage_file=$(find . -name coverage.cobertura.xml)" >> $GITHUB_ENV

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # Ensure this secret is defined in your repository settings
        files: ${{ env.coverage_file }}
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
